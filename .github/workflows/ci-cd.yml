name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # Checkout c√≥digo
      - name: Checkout code
        uses: actions/checkout@v3

      # Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Instalar dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docker/my-app/app/requeriments.txt

      # Linter (flake8)
      - name: Run Linter
        run: |
          pip install flake8
          flake8 my-app/app --max-line-length=88

      # Pruebas (pytest)
      - name: Run Tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
        run: |
          pip install pytest
          pytest my-app/app --disable-warnings

      # Construir Docker
      - name: Build Docker Image
        run: |
          docker build -t my-flask-app:latest my-app
